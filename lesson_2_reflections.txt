What happens when you initialize a repository? Why do you need to do it?

The default folder .git is created and the configurations

How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area contains the changes before the commit. File can be in the working directory but not in the staging area. Then when a commit is don just the files in the staging area are added to the repository
The value is to make logical commits instead of commit per each file.

git add
git commit
git status -stat
git log
git diff old new
git diff (workign area and staging)
git diff --staged (staging area and last commit)
gir reset --hard (remove erverything working spacce and staging area)

How can you use the staging area to make sure you have one commit per logical change?

Adding to the staging area just the files that you want to be in the logical commit. 

git branch (show braches)
git branch name (crate brach name)
git checkout name (put your current versio to commit in that branch)

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

when new features or different fucntions are needed

How do the diagrams help you visualize the branch structure?

Help me to know the parent of the comits and the branches that i have

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

That means that the features or bug solved or added independly are now together in the same branch

What are the pros and cons of Git’s automatic merging vs. always doing merges manually?

Pro is that you save time and cons is that some times easy questions are shown beacuse git does not have knowlege about the program